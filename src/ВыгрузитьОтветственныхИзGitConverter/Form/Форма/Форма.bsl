
Функция ПутьКФайлу()

	Возврат "C:\src\Ответственные.txt";

КонецФункции // ПутьКФайлу()


&НаСервере
Процедура ПолучитьФайлОтветственныхНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВерсииХранилищаСостав.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ВерсииХранилищаСостав.Ссылка.Пользователь КАК Пользователь,
		|	ВерсииХранилищаСостав.Ссылка.ДатаСоздания КАК ДатаСоздания
		|ПОМЕСТИТЬ втДанные
		|ИЗ
		|	Справочник.ВерсииХранилища.Состав КАК ВерсииХранилищаСостав
		|ГДЕ
		|	ВерсииХранилищаСостав.Ссылка.Владелец = &Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные.ОбъектМетаданных КАК ОбъектМетаданных,
		|	МАКСИМУМ(втДанные.ДатаСоздания) КАК ДатаСоздания
		|ПОМЕСТИТЬ втПоследнее
		|ИЗ
		|	втДанные КАК втДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанные.ОбъектМетаданных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПоследнее.ОбъектМетаданных КАК ОбъектМетаданных,
		|	втПоследнее.ДатаСоздания КАК ДатаСоздания,
		|	втДанные.Пользователь КАК Ответственный
		|ИЗ
		|	втПоследнее КАК втПоследнее
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДанные КАК втДанные
		|		ПО втПоследнее.ОбъектМетаданных = втДанные.ОбъектМетаданных
		|			И втПоследнее.ДатаСоздания = втДанные.ДатаСоздания
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания,
		|	ОбъектМетаданных";
	
	Запрос.УстановитьПараметр("Владелец", Хранилище);
	
	тз = Запрос.Выполнить().Выгрузить();
	
	тз.Колонки.Добавить( "ПутьОбъекта" );
	
	замены = Замены();
	
	Для каждого цСтрока Из тз Цикл
		
		Для каждого цЗамена Из замены Цикл
			
			путь = ПолучитьПуть( цСтрока.ОбъектМетаданных, цЗамена.Ключ, цЗамена.Значение );
			
			Если Не путь = Неопределено Тогда
				
				путь = СтрЗаменить( путь, ".Форма.", "." );
				путь = СтрЗаменить( путь, ".Макет.", "." );
				путь = СтрЗаменить( путь, ".Подсистема.", "." );
				
				цСтрока.ПутьОбъекта = путь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого цСтрока Из тз.НайтиСтроки( Новый Структура("ПутьОбъекта") ) Цикл
		
		тз.Удалить( цСтрока );
		
	КонецЦикла;
	
	ПолученнаяТаблица.Загрузить( тз );
	
	ЗначениеВФайл( ПутьКФайлу(), тз );
	
КонецПроцедуры

Функция Замены()

	соот = Новый Соответствие;
	
	соот.Вставить("РегистрБухгалтерии", "РегистрыБухгалтерии");
	соот.Вставить("РегистрНакопления", "РегистрыНакопления");
	соот.Вставить("БизнесПроцесс", "БизнесПроцессы");
	соот.Вставить("РегистрРасчета", "РегистрыРасчета");
	соот.Вставить("Справочник", "Справочники");
	соот.Вставить("ПланСчетов", "ПланыСчетов");
	соот.Вставить("ПланВидовРасчета", "ПланыВидовРасчета");
	соот.Вставить("ПланВидовХарактеристик", "ПланыВидовХарактеристик");
	соот.Вставить("ГруппаКоманд", "Общие.ГруппыКоманд");
	соот.Вставить("ОбщийРеквизит", "Общие.ОбщиеРеквизиты");
	соот.Вставить("ОбщаяКоманда", "Общие.ОбщиеКоманды");
	соот.Вставить("ОбщаяФорма", "Общие.ОбщиеФормы");
	соот.Вставить("ОбщийМодуль", "Общие.ОбщиеМодули");
	соот.Вставить("ОбщаяКартинка", "Общие.ОбщиеКартинки");
	соот.Вставить("ОбщийМакет", "Общие.ОбщиеМакеты");
	соот.Вставить("Константа", "Константы");
	соот.Вставить("Обработка", "Обработки");
	соот.Вставить("ОпределяемыйТип", "Общие.ОпределяемыеТипы");
	соот.Вставить("ЖурналДокументов", "ЖурналыДокументов");
	соот.Вставить("Нумератор", "НумераторыДокументов");
	соот.Вставить("Документ", "Документы");
	соот.Вставить("Перечисление", "Перечисления");
	соот.Вставить("ПодпискаНаСобытие", "Общие.ПодпискиНаСобытия");
	соот.Вставить("ПланОбмена", "Общие.ПланыОбмена");
	соот.Вставить("ВнешнийИсточникДанных", "ВнешниеИсточникиДанных");
	соот.Вставить("КритерийОтбора", "Общие.КритерииОтбора");
	соот.Вставить("ФункциональнаяОпция", "Общие.ФункциональныеОпции");
	соот.Вставить("ПараметрФункциональныхОпций", "Общие.ПараметрыФункциональныхОпций");
	соот.Вставить("HTTPСервис", "Общие.HTTPСервисы");
	соот.Вставить("РегистрСведений", "РегистрыСведений");
	соот.Вставить("Язык", "Общие.Языки");
	соот.Вставить("Отчет", "Отчеты");
	соот.Вставить("Роль", "Общие.Роли");
	соот.Вставить("РегламентноеЗадание", "Общие.РегламентныеЗадания");
	соот.Вставить("Последовательность", "Последовательности");
	соот.Вставить("ПараметрСеанса", "Общие.ПараметрыСеанса");
	соот.Вставить("ХранилищеНастроек", "Общие.ХранилищаНастроек");
	соот.Вставить("ЭлементСтиля", "Общие.ЭлементыСтиля");
	соот.Вставить("Подсистема", "Общие.Подсистемы");
	соот.Вставить("Задача", "Задачи");
	соот.Вставить("WebСервис", "Общие.WebСервисы");
	соот.Вставить("ПакетXDTO", "Общие.ПакетыXDTO");
	соот.Вставить("Интерфейс", "Общие.Интерфейсы");
	соот.Вставить("WSСсылка", "Общие.WSСсылки");

	
	Возврат соот;

КонецФункции


Функция ПолучитьПуть( Знач пОбъектМетаданных, Знач пНачало, Знач пНовоеНачало )

	Если СтрНачинаетсяС( НРег( пОбъектМетаданных ), НРег( пНачало ) + "." ) Тогда
		
		Возврат пНовоеНачало + "." + Сред( пОбъектМетаданных, СтрДлина( пНачало )+2);
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;

КонецФункции


&НаКлиенте
Процедура ПолучитьФайлОтветственных(Команда)
	ПолучитьФайлОтветственныхНаСервере();
КонецПроцедуры
